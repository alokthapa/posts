<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"	xmlns:excerpt="http://wordpress.org/export/1.0/excerpt/"	xmlns:content="http://purl.org/rss/1.0/modules/content/"	xmlns:wfw="http://wellformedweb.org/CommentAPI/"	xmlns:dc="http://purl.org/dc/elements/1.1/"	xmlns:wp="http://wordpress.org/export/1.0/"><channel>	<title>programmable programmer</title>	<link></link>	<description>lisp + smalltalk + ruby + javascript + c#</description>	<pubDate>Tue May 05 10:03:29 -0700 2009</pubDate>	<generator>http://posterous.com</generator>	<language>en</language>	<wp:wxr_version>1.0</wp:wxr_version>	<wp:base_site_url>http://progprog.posterous.com</wp:base_site_url>	<wp:base_blog_url>http://progprog.posterous.com</wp:base_blog_url>		<image>		<url>http://posterous.com/images/profile/missing-public-space-75.png</url>		<title>programmable programmer</title>		<link>http://progprog.posterous.com</link>	</image>	<item>	<title>Untitled</title>	<link>http://progprog.posterous.com/46006263</link>	<pubDate>Mon Mar 14 19:07:34 -0700 2011</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/46006263</guid>	<description></description>	<content:encoded><![CDATA[<div class='p_embed p_image_embed'><a href="http://getfile8.posterous.com/getfile/files.posterous.com/progprog/mubdGsjHwodvvssaixqraAJmEbsAxJpuHzCdEqxuktknkCnxEhJxzfkAnuoy/media_https1i1picplzt_DDHzH.jpg.scaled1000.jpg"><img alt="Media_https1i1picplzt_ddhzh" height="667" src="http://getfile7.posterous.com/getfile/files.posterous.com/progprog/mubdGsjHwodvvssaixqraAJmEbsAxJpuHzCdEqxuktknkCnxEhJxzfkAnuoy/media_https1i1picplzt_DDHzH.jpg.scaled500.jpg" width="500" /></a></div><p />Taken with <a href="http://picplz.com">picplz</a>.]]></content:encoded>	<excerpt:encoded><![CDATA[Taken with picplz.]]></excerpt:encoded>		<wp:post_date>Mon Mar 14 19:07:34 -0700 2011</wp:post_date>	<wp:post_date_gmt>Mon Mar 14 19:07:34 -0700 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>46006263</wp:post_id>	<wp:post_name>46006263</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Some updates</title>	<link>http://progprog.posterous.com/some-updates</link>	<pubDate>Tue Mar 08 09:23:00 -0800 2011</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/some-updates</guid>	<description></description>	<content:encoded><![CDATA[<p>Some updates on the callbreak and satori applications. I have finally gotten around to setting up my ec2 server and now callbreak (Seaside version ) and the Satori (github.com/alokthapa/satori) are both available online.&nbsp;</p><p>&nbsp;</p><p>Link to callbreak : bit.ly/playcallbreak</p><p>&nbsp;</p><p>Link to satori:&nbsp;<a href="http://bit.ly/f5BIrk">http://bit.ly/f5BIrk</a> (although this seems to be broken right now... :( )</p><p>&nbsp;</p><p>Also, I've been working on a scheme implementation for flush (or sth like that), which is played using 3 cards. It's available here at github.com/alokthapa/flush so download it and check it out. You will need Racket 5.1 to play the game.&nbsp;</p><p>&nbsp;</p><p>Enjoy.</p>]]></content:encoded>	<excerpt:encoded><![CDATA[Some updates on the callbreak and satori applications. I have finally gotten around to setting up my ec2 server and now callbreak (Seaside version ) and the Satori (github.com/alokthapa/satori) are both available online. Link to callbreak : bit.ly...]]></excerpt:encoded>		<wp:post_date>Tue Mar 08 09:23:00 -0800 2011</wp:post_date>	<wp:post_date_gmt>Tue Mar 08 09:23:00 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>45329950</wp:post_id>	<wp:post_name>some-updates</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Added new pages</title>	<link>http://progprog.posterous.com/added-new-pages</link>	<pubDate>Tue Oct 12 00:56:00 -0700 2010</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/added-new-pages</guid>	<description></description>	<content:encoded><![CDATA[<p>Just added a couple of pages for some of my projects</p><p>&nbsp;</p><p><a href="http://progprog.posterous.com/pages/timetrack">Timetrack</a>&nbsp;and <a href="http://progprog.posterous.com/pages/callbreak">Callbreak</a>&nbsp;</p><p>&nbsp;</p><p>Enjoy!</p>]]></content:encoded>	<excerpt:encoded><![CDATA[Just added a couple of pages for some of my projects Timetrack and Callbreak Enjoy!]]></excerpt:encoded>		<wp:post_date>Tue Oct 12 00:56:00 -0700 2010</wp:post_date>	<wp:post_date_gmt>Tue Oct 12 00:56:00 -0700 2010</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>30286393</wp:post_id>	<wp:post_name>added-new-pages</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Untitled</title>	<link>http://progprog.posterous.com/46006729</link>	<pubDate>Mon Mar 14 19:15:53 -0700 2011</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/46006729</guid>	<description></description>	<content:encoded><![CDATA[<div class='p_embed p_image_embed'><a href="http://getfile9.posterous.com/getfile/files.posterous.com/progprog/ydhxkleAwcaomwFkwhcFlvbveCdxjbblGfmdpIFsyjGFBuAAsIGrjIHCyJcl/media_https1i1picplzt_jAzrg.jpg.scaled1000.jpg"><img alt="Media_https1i1picplzt_jazrg" height="667" src="http://getfile3.posterous.com/getfile/files.posterous.com/progprog/ydhxkleAwcaomwFkwhcFlvbveCdxjbblGfmdpIFsyjGFBuAAsIGrjIHCyJcl/media_https1i1picplzt_jAzrg.jpg.scaled500.jpg" width="500" /></a></div><p />Taken with <a href="http://picplz.com">picplz</a>.]]></content:encoded>	<excerpt:encoded><![CDATA[Taken with picplz.]]></excerpt:encoded>		<wp:post_date>Mon Mar 14 19:15:53 -0700 2011</wp:post_date>	<wp:post_date_gmt>Mon Mar 14 19:15:53 -0700 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>46006729</wp:post_id>	<wp:post_name>46006729</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Palindrome in Lisp</title>	<link>http://progprog.posterous.com/2007/06/28/palindrome-in-lisp</link>	<pubDate>Thu Jun 28 22:35:00 -0700 2007</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>				<category domain="tag" nicename="lisp"><![CDATA[lisp]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/2007/06/28/palindrome-in-lisp</guid>	<description></description>	<content:encoded><![CDATA[<p>Here's my version of palindrome for lisp problems 99 no 06 found <a href="http://www.ic.unicamp.br/~meidanis/courses/mc336/2006s2/funcional/L-99_Ninety-Nine_Lisp_Problems.html">here</a></p><p>&nbsp;</p><p><p><a href="https://gist.github.com/621884">https://gist.github.com/621884</a></p></p>]]></content:encoded>	<excerpt:encoded><![CDATA[Here's my version of palindrome for lisp problems 99 no 06 found here]]></excerpt:encoded>		<wp:post_date>Thu Jun 28 22:35:00 -0700 2007</wp:post_date>	<wp:post_date_gmt>Thu Jun 28 22:35:00 -0700 2007</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>30289230</wp:post_id>	<wp:post_name>2007/06/28/palindrome-in-lisp</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>			<wp:comment>			<wp:comment_id>5664015</wp:comment_id>							<wp:comment_author><![CDATA[sivakumar]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Sun Jul 08 10:40:43 -0700 2007</wp:comment_date>			<wp:comment_date_gmt>Sun Jul 08 10:40:43 -0700 2007</wp:comment_date_gmt>			<wp:comment_content><![CDATA[nice]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>5664016</wp:comment_id>							<wp:comment_author><![CDATA[Mada]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Wed Oct 17 17:41:58 -0700 2007</wp:comment_date>			<wp:comment_date_gmt>Wed Oct 17 17:41:58 -0700 2007</wp:comment_date_gmt>			<wp:comment_content><![CDATA[Good job!:) Saved me a lot of nerves, I was going on the same idea but sort of got lost between parentheses :P]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>5664017</wp:comment_id>							<wp:comment_author><![CDATA[kelly]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Tue Apr 15 04:00:29 -0700 2008</wp:comment_date>			<wp:comment_date_gmt>Tue Apr 15 04:00:29 -0700 2008</wp:comment_date_gmt>			<wp:comment_content><![CDATA[an iterative approach(defun make-palindrome(list)  (if (= (length list) 1)    list  (dotimes (count (length list) list)    (setf list (append list (list (nth (- (length list) (+ count (+ count 1))) list))))  )))]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>5664018</wp:comment_id>							<wp:comment_author><![CDATA[Rajesh]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Sun Apr 18 03:12:05 -0700 2010</wp:comment_date>			<wp:comment_date_gmt>Sun Apr 18 03:12:05 -0700 2010</wp:comment_date_gmt>			<wp:comment_content><![CDATA[A solution using mapcar and reduce(defun is-palindrome (lst)  (reduce #'(lambda (x y) (if (and x y) t nil)) 	  (mapcar #'eql lst (reverse lst))))]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>	</item><item>	<title>Yet another blog</title>	<link>http://progprog.posterous.com/yet-another-blog-2</link>	<pubDate>Tue May 05 10:06:03 -0700 2009</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/yet-another-blog-2</guid>	<description></description>	<content:encoded><![CDATA[<p>This is another blog for my programming stuff.</p>]]></content:encoded>	<excerpt:encoded><![CDATA[This is another blog for my programming stuff.]]></excerpt:encoded>		<wp:post_date>Tue May 05 10:06:03 -0700 2009</wp:post_date>	<wp:post_date_gmt>Tue May 05 10:06:03 -0700 2009</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>749039</wp:post_id>	<wp:post_name>yet-another-blog-2</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Who's data is it anyways?</title>	<link>http://progprog.posterous.com/whos-data-is-it-anyways</link>	<pubDate>Fri Mar 25 12:38:00 -0700 2011</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>				<category domain="tag" nicename="rfs"><![CDATA[rfs]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/whos-data-is-it-anyways</guid>	<description></description>	<content:encoded><![CDATA[<p>Whenever you post a comment in a blog, news article or your favorite social network, there is always a question of who owns the data and who creates value.  Clearly on sites like Facebook and Twitter, YOU create most of the value, with comment on NYTimes, you create partial value. However you run the risk of losing YOUR data if the company goes under or it gets bought by Google and is discontinued.  That's where disqus comes in and at least tries to solve the problem. If the website you're on supports disqus, then you have some control over your data. However this only solves the problem partially since for all the sites that don't support disqus comments,  the problem still persists.</p><p>The solution:</p><p>A browser extension that records whatever you type on a textbox. ( Of course you have to authorize it to do so). That way all your comments are safe. It could also provide an option to save it on a server somewhere so you have some kind of a stream/blog kinda thing that belongs to you.</p><p>I hope somebody builds this. I'd use it.</p>]]></content:encoded>	<excerpt:encoded><![CDATA[Whenever you post a comment in a blog, news article or your favorite social network, there is always a question of who owns the data and who creates value. Clearly on sites like Facebook and Twitter, YOU create most of the value, with comment on N...]]></excerpt:encoded>		<wp:post_date>Fri Mar 25 12:38:00 -0700 2011</wp:post_date>	<wp:post_date_gmt>Fri Mar 25 12:38:00 -0700 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>47330768</wp:post_id>	<wp:post_name>whos-data-is-it-anyways</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Flush Internals </title>	<link>http://progprog.posterous.com/flush-internals</link>	<pubDate>Tue Mar 08 10:59:00 -0800 2011</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/flush-internals</guid>	<description></description>	<content:encoded><![CDATA[<p><div style="background-color: transparent;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">State management in Flush (and in games in general)</span><br /><span style="font-family: Arial;"><span style="font-size: 15px;"><br /></span></span><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">Most games need to manage the current state of a game, be it chess positions or number of cards played or the size of the pot. One could always use an global variable like turn and then set the variable to the next player., However, another approach could be to use functional programing idioms and let the state flow from one player to the next without having to create any such variable.</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">Suppose there is a list of players, then we could recursively work on the list and get to the next player.</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">For example:</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(define (play players)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span>(if &nbsp;(null? players) &lsquo;end</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span> &nbsp;&nbsp;&nbsp;&nbsp;(begin</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span><span style=""> </span>(do-sth (car players))</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span><span style=""> </span>(play (cdr players))))</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">Here we recurse on the list players and call do-sth on the first player in the list.</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">Here we have completely removed the use for a turn variable. However, in this simplistic example there is no &nbsp;state management. In the game of flush, there are a couple of variables we need to manage, viz. the current size of the pot, the current minimum allowable bet amount and the amount of money each player has and info on whether a player has passed or not. </span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">Lets add the first two variable into our example. Also we change do-sth to play? which looks at the cards of the current player and decides whether it wants to play or not. </span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(define (play players pot minbet)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span>(if (null? players) &lsquo;end</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span> &nbsp;&nbsp;&nbsp;(if (play? (car players)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(play (cdr players) (+ pot minibet) minibet)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(play (cdr players) pot minibet)</span><p /><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">Now , when a player plays, &nbsp;&nbsp;the size of the pot increases and this information is passed on to the next player .( Note that we don&rsquo;t have the functionality right now to increase the minibet yet.)</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">But a coulple of information are missing like the amount of money player1 has and the pass state of a player. If a player has already passed, it will simply pass all the information to the next player.</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(define (play players pot minibet ms ps)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span>(if (null? players) &lsquo;end</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span> &nbsp;&nbsp;&nbsp;(if (and (car ps) (play? (car players) minibet pot (car ms))</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(play (cdr players) (+ pot minibet) minibet (cdr ms) &nbsp;(cdr ps))</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(play (cdr players) pot minibet (cdr ms) (cdr ps)))))</span><p /><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">Ok, now we&rsquo;ve made a couple of changes. First we added the list ms (money ) and ps (pass status) for each player. The (car ps) is set to true if a player is still playing, so we&rsquo;ve also added that in the if statement. Also we&rsquo;ve added more parameters to the play? function since you need the information on how big the pot is, how much money you have and what the minimum bet is to make your decision. </span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">Still a couple of things are missing here. First when you run out of players, it just stops. We&rsquo;ll worry about that later. Another thing that&rsquo;s missing is the new state of money and the pass state. While we have information on the amount of money you have right now, we have no way to record the amount of money you have after you decide to play, Also, if you decide not to play this turn, there is no way to record that info.</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">Lets digress here to talk about some of the idioms of functional programming. Here&rsquo;s a common way to recursively calculate length of a list.</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(define (length lst)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span>(if (null? lst) 0 (+ 1 (length (cdr lst))))</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">The problem with this is that scheme has to keep track of the recursion and what is left to do. For eg. if you calculate length of a list (1 2 3) it recurs three times, and comes back up three times adding 1 for each recursive call. This problem is usually solved using accumulators.</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(define (length-helper lst value)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span>(if (null? lst) </span><br /><p style="margin-left: 72pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;value</span></p><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(length-helper (cdr lst) (+ value 1))))</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(define (length lst)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span>(length-helper lst 0))</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""> </span><span style=""> </span><span style=""> </span></span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">You can see here that length calls length-helper with an initial value of 0. The length-helper recurs till it exhausts itself of the list and returns the the variable value. One advantage of this approach is that there is no work left to do. In fact, scheme implementations are guaranteed to optimize the use of accumulators so that you get the speed of an iterative approach even though you&rsquo;re actually recursing through a list. </span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">Ok, so back to our problem. Well, the solution is simple, you just add new accumulators for the new values of money and pass state.</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span>(define (play players pot minibet ms ps new-ms new-ps )</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span>(if (null? players) &lsquo;end</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span> &nbsp;&nbsp;&nbsp;(if (and (car ps) (play? (car players) minibet pot (car ms))</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(play (cdr players) </span><br /><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;(+ pot minibet) </span></p><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;minibet </span></p><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;(cdr ms) &nbsp;</span></p><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;(cdr ps) </span></p><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;(cons (- (car ms) minibet) &nbsp;new-ms) </span></p><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;(cons #t new-ps))</span></p><div style="background-color: transparent;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(play (cdr players) </span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pot </span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minibet </span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr ms) </span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr ps)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons (car ms) new-ms)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons #f new-ps)))))</span><p /><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">So now we are building up a new money and pass state list while consuming the previous version. Of course, the lists are being built in opposite order so you would need to reverse each list when you start a new round.</span></div><div style="background-color: transparent;"><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(define orig-players (list of players))</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(define orig-money (list of money))</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(define orig-pass (list of pass))</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span></span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(define (play players pot minibet ms ps new-ms new-ps )</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span>(if (null? players) </span></div><p style="margin-left: 72pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;(play orig-players pot minibet  (reverse new-ms) (reverse new-ps) &lsquo;() &lsquo;())</span></p><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span><span style=""> </span> &nbsp;&nbsp;&nbsp;(if (and (car ps) (play? (car players) minibet pot (car ms))</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(play (cdr players) </span><br /><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;(+ pot minibet) </span></p><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;minibet </span></p><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;(cdr ms) &nbsp;</span></p><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;(cdr ps) </span></p><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;(cons (- (car ms) minibet) &nbsp;new-ms) </span></p><p style="margin-left: 108pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;(cons #t new-ps))</span></p><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(play (cdr players) </span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pot </span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minibet </span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr ms) </span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cdr ps)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons (car ms) new-ms)</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons #f new-ps)))))</span><p /><p style="margin-left: 36pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">(define (game) </span></p><p style="margin-left: 36pt; margin-top: 0pt; margin-bottom: 0pt; font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;"><span style=""> </span>(play orig-players 0 20 orig-money orig-pass &lsquo;() &lsquo;()))</span></p><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">So there you go, we&rsquo;ve managed state in a flush game without using one set! or using a global variable. Of course, this program above goes into an infinite loop but we&rsquo;ll fix that later.....</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">To recap what we&rsquo;ve accomplished here is </span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">1. we never had to keep track of a turn variable. </span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">2. We managed to keep track of the current pot and minimum bet by passing it as a functional argument to the next player.</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">3. We used accumulators to generate new state for money and pass state while consuming an older version.</span><br /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">4. No use of set! or mutations at all!!</span><p /><span style="font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: none; vertical-align: baseline;">I hope you enjoyed this article and you can check out the code the the flush game on github at </span><a href="http://github.com/alokthapa/flush" style="font-family: Tinos; font-size: medium;"><span style="font-size: 11pt; font-family: Arial; color: #000099; background-color: transparent; font-weight: normal; font-style: normal; text-decoration: underline; vertical-align: baseline;">http://github.com/alokthapa/flush</span></a></div></p>]]></content:encoded>	<excerpt:encoded><![CDATA[State management in Flush (and in games in general)Most games need to manage the current state of a game, be it chess positions or number of cards played or the size of the pot. One could always use an global variable like turn and then set the va...]]></excerpt:encoded>		<wp:post_date>Tue Mar 08 10:59:00 -0800 2011</wp:post_date>	<wp:post_date_gmt>Tue Mar 08 10:59:00 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>45340018</wp:post_id>	<wp:post_name>flush-internals</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Untitled</title>	<link>http://progprog.posterous.com/46007536</link>	<pubDate>Mon Mar 14 19:35:18 -0700 2011</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/46007536</guid>	<description></description>	<content:encoded><![CDATA[<div class='p_embed p_image_embed'><a href="http://getfile9.posterous.com/getfile/files.posterous.com/progprog/eBcIBEHynlfzrGliIqgaFciztGiFgHJaDmbAxployDmAtdiuquAxqtGBxCCJ/media_https2i1picplzt_bcebs.jpg.scaled1000.jpg"><img alt="Media_https2i1picplzt_bcebs" height="375" src="http://getfile0.posterous.com/getfile/files.posterous.com/progprog/eBcIBEHynlfzrGliIqgaFciztGiFgHJaDmbAxployDmAtdiuquAxqtGBxCCJ/media_https2i1picplzt_bcebs.jpg.scaled500.jpg" width="500" /></a></div><p />Taken with <a href="http://picplz.com">picplz</a> in <a href="http://picplz.com/city/dallas-tx/">Dallas, TX</a>.]]></content:encoded>	<excerpt:encoded><![CDATA[Taken with picplz in Dallas, TX.]]></excerpt:encoded>		<wp:post_date>Mon Mar 14 19:35:18 -0700 2011</wp:post_date>	<wp:post_date_gmt>Mon Mar 14 19:35:18 -0700 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>46007536</wp:post_id>	<wp:post_name>46007536</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Too many links spoil the blog</title>	<link>http://progprog.posterous.com/too-many-links-spoil-the-blog</link>	<pubDate>Wed May 06 02:38:09 -0700 2009</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/too-many-links-spoil-the-blog</guid>	<description></description>	<content:encoded><![CDATA[<div>"If I wanted to know what he thought, I'd buy his book. "&nbsp;</div><div><i>Katherine Watson,</i></div><div><i>Mona Lisa Smile</i>&nbsp;</div><p /><div><b>It's simple</b>,&nbsp;</div><p /><div>among a zillion blogs out there, you're finally able to get eyeballs on your page and you link relentlessly and send them away!&nbsp;</div><p /><div>I<b>t creates distractions</b>. Distractions hurt readability which is really important if you want people coming back. Keep it simple. Let people concentrate on what you have to say. Allude, if possible.&nbsp;Think about it,&nbsp;when was the last time you read through a whole Wikipedia article without clicking on one of those irresistible links.&nbsp;</div><p /><div>Besides, if you're talking about&nbsp;current events, you don't need those links. Most people can figure out what you're talking about . Don't ever link to CNN!</div><p /><div><div><b>But I've done my research!<span style="font-weight: normal;">&nbsp;References are important, but what you have to say should take precedence. </span><span style="font-weight: normal;">Use footnotes.&nbsp;Show them at the end of your post or add&nbsp;them as a comment to you post.</span></b></div><p /><div>(PS: Please don't hate me for quoting Julia Roberts! )</div><p /></div>]]></content:encoded>	<excerpt:encoded><![CDATA["If I wanted to know what he thought, I'd buy his book. " Katherine Watson, Mona Lisa Smile It's simple, among a zillion blogs out there, you're finally able to get eyeballs on your page and you link relentlessly and send them away! It creates dis...]]></excerpt:encoded>		<wp:post_date>Wed May 06 02:38:09 -0700 2009</wp:post_date>	<wp:post_date_gmt>Wed May 06 02:38:09 -0700 2009</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>753152</wp:post_id>	<wp:post_name>too-many-links-spoil-the-blog</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>ASP.NET Wrapper Panel</title>	<link>http://progprog.posterous.com/aspnet-wrapper-panel</link>	<pubDate>Tue Oct 12 01:59:00 -0700 2010</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/aspnet-wrapper-panel</guid>	<description></description>	<content:encoded><![CDATA[<div style="color: #000000; font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: #ffffff; margin: 8px;"><p>This is a useful control that works like a masterpage but is more lightweight. You can use this control as a wrapper for commonly used html snippets in your code.</p><p><script src="https://gist.github.com/621867.js?file=wrapper1"></script></p><p>&nbsp;</p><p>This is the code file for the control.</p><p>&nbsp;</p><p><script src="https://gist.github.com/621867.js?file=wrap2"></script></p><p>You would use it as follows:</p><p><script src="https://gist.github.com/621867.js?file=wrap3"></script></p><p>The result would be:</p><p><script src="https://gist.github.com/621867.js?file=wrap4"></script></p><p>Now you can focus on what's important and not worry about the wrapping html code.</p><p>Also using the TemplateInstance.Single attribute, you can access controls within your wrapper just as you would without it. If you didn't use it, you willl have to access them using the FindControl function on wrapper control.</p></div><p>&nbsp;</p>]]></content:encoded>	<excerpt:encoded><![CDATA[This is a useful control that works like a masterpage but is more lightweight. You can use this control as a wrapper for commonly used html snippets in your code. This is the code file for the control. You would use it as follows: The result would...]]></excerpt:encoded>		<wp:post_date>Tue Oct 12 01:59:00 -0700 2010</wp:post_date>	<wp:post_date_gmt>Tue Oct 12 01:59:00 -0700 2010</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>30290638</wp:post_id>	<wp:post_name>aspnet-wrapper-panel</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Post With GWT</title>	<link>http://progprog.posterous.com/2007/05/15/post-with-gwt</link>	<pubDate>Tue May 15 17:23:00 -0700 2007</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>				<category domain="tag" nicename="grails"><![CDATA[grails]]></category>			<category domain="tag" nicename="gwt"><![CDATA[gwt]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/2007/05/15/post-with-gwt</guid>	<description></description>	<content:encoded><![CDATA[<p>This article is about integrating GWT with Grails. Here, GWT makes request to the Grails server which then returns a JSON object back to the GWT client.  Here's a way to do post using GWT</p><p><p><a href="https://gist.github.com/621885">https://gist.github.com/621885</a></p></p><p>By the way, its calling a controller of a grails project.  Here's how it handles it</p><p>&nbsp;</p><p><p><a href="https://gist.github.com/621887">https://gist.github.com/621887</a></p></p><p>&nbsp;</p><p>Edit:  Mary, you should be able to find that info somewhere on the web. Essentially, you create a RequestBuilder, send a request using <code><strong><a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.4/com/google/gwt/http/client/RequestBuilder.html#sendRequest%28java.lang.String,%20com.google.gwt.http.client.RequestCallback%29"></a></strong></code> <code><strong><a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.4/com/google/gwt/http/client/RequestBuilder.html#sendRequest%28java.lang.String,%20com.google.gwt.http.client.RequestCallback%29">sendRequest</a></strong>(java.lang.String&nbsp;requestData,             <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.4/com/google/gwt/http/client/RequestCallback.html" title="interface in com.google.gwt.http.client">RequestCallback</a> callback)</code> callback should be a class that inherits RequestCallback interface. Now RequestCallback has a method  <code><strong><a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.4/com/google/gwt/http/client/RequestCallback.html#onResponseReceived%28com.google.gwt.http.client.Request,%20com.google.gwt.http.client.Response%29">onResponseReceived</a></strong>(<a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.4/com/google/gwt/http/client/Request.html" title="class in com.google.gwt.http.client">Request</a> request,                    <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.4/com/google/gwt/http/client/Response.html" title="class in com.google.gwt.http.client">Response</a> response)</code> that you should implement, and Response has some methods like <code><strong><a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.4/com/google/gwt/http/client/Response.html#getText%28%29">getText</a></strong>()</code> that you can use.  Cheers</p>]]></content:encoded>	<excerpt:encoded><![CDATA[This article is about integrating GWT with Grails. Here, GWT makes request to the Grails server which then returns a JSON object back to the GWT client. Here's a way to do post using GWT By the way, its calling a controller of a grails project. He...]]></excerpt:encoded>		<wp:post_date>Tue May 15 17:23:00 -0700 2007</wp:post_date>	<wp:post_date_gmt>Tue May 15 17:23:00 -0700 2007</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>30289219</wp:post_id>	<wp:post_name>2007/05/15/post-with-gwt</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>			<wp:comment>			<wp:comment_id>5664005</wp:comment_id>							<wp:comment_author><![CDATA[louis]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Wed Feb 06 10:40:25 -0800 2008</wp:comment_date>			<wp:comment_date_gmt>Wed Feb 06 10:40:25 -0800 2008</wp:comment_date_gmt>			<wp:comment_content><![CDATA[very cool code, was looking for it for a long time...]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>5664006</wp:comment_id>							<wp:comment_author><![CDATA[Mary]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Mon May 19 15:04:21 -0700 2008</wp:comment_date>			<wp:comment_date_gmt>Mon May 19 15:04:21 -0700 2008</wp:comment_date_gmt>			<wp:comment_content><![CDATA[I'm starting on GWT, can you give other examples where you are using the way &quot;RequestBuilder&quot; for RPC in GWT]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>5664011</wp:comment_id>							<wp:comment_author><![CDATA[And]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Thu Jul 10 08:40:59 -0700 2008</wp:comment_date>			<wp:comment_date_gmt>Thu Jul 10 08:40:59 -0700 2008</wp:comment_date_gmt>			<wp:comment_content><![CDATA[I was trying to send a POST request to &quot;http://www.google.com/accounts/ClientLogin&quot; but i get: &quot;The URLhttp://www.google.com/accounts/ClientLogin is invalid or violates the same-origin security restriction&quot; (i get this for anything starting with http:// or localhost). How can i get pass this? is there NO WAY to send a request to server/servlet in another domain??]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>5664012</wp:comment_id>							<wp:comment_author><![CDATA[Peregrino]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Thu Nov 27 16:22:32 -0800 2008</wp:comment_date>			<wp:comment_date_gmt>Thu Nov 27 16:22:32 -0800 2008</wp:comment_date_gmt>			<wp:comment_content><![CDATA[@And:You're violating the Same Origin Policy (SOP), that's a restriction of GWT to prevent Cross Site Scripting (XSS) attacks, so that you can only request elements hosted on your same domain. There are some ways to get around this which are documented in the GWT Docs. I recall reading about a technique called &quot;JSON with Padding&quot; or JSOP that allowed you to do something like what you're trying to do ;)Hope this helps in any way.]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>5664007</wp:comment_id>							<wp:comment_author><![CDATA[joe]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Sun May 03 22:13:44 -0700 2009</wp:comment_date>			<wp:comment_date_gmt>Sun May 03 22:13:44 -0700 2009</wp:comment_date_gmt>			<wp:comment_content><![CDATA[@And:You need to add a doPost() to your servlet.]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>5664009</wp:comment_id>							<wp:comment_author><![CDATA[TonyKayrouz]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Thu Sep 10 15:53:12 -0700 2009</wp:comment_date>			<wp:comment_date_gmt>Thu Sep 10 15:53:12 -0700 2009</wp:comment_date_gmt>			<wp:comment_content><![CDATA[I was trying to send a Get request to “http://www.google.com/accounts/ClientLogin” but i get: “The URLhttp://www.google.com/accounts/ClientLogin is invalid or violates the same-origin security restriction” (i get this for anything starting with http:// or localhost). How can i get pass this? is there NO WAY to send a request to server/servlet in another domain??&quot;]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>5664010</wp:comment_id>							<wp:comment_author><![CDATA[Fabio]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Mon Dec 28 13:07:55 -0800 2009</wp:comment_date>			<wp:comment_date_gmt>Mon Dec 28 13:07:55 -0800 2009</wp:comment_date_gmt>			<wp:comment_content><![CDATA[Interesting... Json P works well but.. I am calling MY REST services. I wanna make POST,PUT,DELETE requests, too.How can I do? getJson() on the gwt docs is great but what about for other crud operations?]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>5664013</wp:comment_id>							<wp:comment_author><![CDATA[Sven Tiffe]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Tue Jul 27 22:45:19 -0700 2010</wp:comment_date>			<wp:comment_date_gmt>Tue Jul 27 22:45:19 -0700 2010</wp:comment_date_gmt>			<wp:comment_content><![CDATA[I use native JS code to open a web page in a new browser window and to pass information by POST. The implementation has been derived from another example found on the web and is explained here: http://ililiililililii.blog.de/2010/06/20/generating-tag-clouds-in-wordle-with-gwt-and-post-8837637/As I need to open and display the page which is called by the POST, I did not use the RequestBuilder. Do you know alternatives to my approach?Thx]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>	</item><item>	<title>Untitled</title>	<link>http://progprog.posterous.com/46005356</link>	<pubDate>Mon Mar 14 18:56:09 -0700 2011</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/46005356</guid>	<description></description>	<content:encoded><![CDATA[<div class='p_embed p_image_embed'><a href="http://getfile4.posterous.com/getfile/files.posterous.com/progprog/ybncwlqpopHxmtfJrielfssbqvJFrndcaClcdnjpyrCHFEDpbGjHCfAwsnFy/media_https1i1picplzt_EqvBj.jpg.scaled1000.jpg"><img alt="Media_https1i1picplzt_eqvbj" height="667" src="http://getfile2.posterous.com/getfile/files.posterous.com/progprog/ybncwlqpopHxmtfJrielfssbqvJFrndcaClcdnjpyrCHFEDpbGjHCfAwsnFy/media_https1i1picplzt_EqvBj.jpg.scaled500.jpg" width="500" /></a></div><p />Taken with <a href="http://picplz.com">picplz</a>.]]></content:encoded>	<excerpt:encoded><![CDATA[Taken with picplz.]]></excerpt:encoded>		<wp:post_date>Mon Mar 14 18:56:09 -0700 2011</wp:post_date>	<wp:post_date_gmt>Mon Mar 14 18:56:09 -0700 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>46005356</wp:post_id>	<wp:post_name>46005356</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Heapsort in Arc</title>	<link>http://progprog.posterous.com/2008/08/09/heapsort-in-arc</link>	<pubDate>Sat Aug 09 19:12:00 -0700 2008</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>				<category domain="tag" nicename="arc"><![CDATA[arc]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/2008/08/09/heapsort-in-arc</guid>	<description></description>	<content:encoded><![CDATA[<p>Here's a simple heapsort in Arc</p><p><p><a href="https://gist.github.com/621879">https://gist.github.com/621879</a></p></p>]]></content:encoded>	<excerpt:encoded><![CDATA[Here's a simple heapsort in Arc]]></excerpt:encoded>		<wp:post_date>Sat Aug 09 19:12:00 -0700 2008</wp:post_date>	<wp:post_date_gmt>Sat Aug 09 19:12:00 -0700 2008</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>30289238</wp:post_id>	<wp:post_name>2008/08/09/heapsort-in-arc</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>A web-based teaching application </title>	<link>http://progprog.posterous.com/a-fully-functional-web-based-cyclic-tree-trav</link>	<pubDate>Tue Feb 01 16:17:56 -0800 2011</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>				<category domain="tag" nicename="scheme"><![CDATA[scheme]]></category>			<category domain="tag" nicename="web"><![CDATA[web]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/a-fully-functional-web-based-cyclic-tree-trav</guid>	<description></description>	<content:encoded><![CDATA[<p><br />I was inspired by the way "The Little Schemer" was used to teach scheme, with question on the left and answers on the right.&nbsp;I wondered how hard it would be to build a web app that could teach you in such an interactive way. Not so hard as I later found out, it needed<strong> less than 70 lines</strong> of code to build a prototype. Not only is the code small, but all you need to do is create a "nodes" datatype to create your own custom book!&nbsp;</p><p>The application first starts with a list of nodes. Each node contains a question to ask and possible responses. Each response can either do nothing (i.e. you move on to the next node in the list), jump you to another named node or have their own child nodes that only they can visit. Each node may or may not have a label, so we can only use them when we need to jump.&nbsp;</p><p>Here's a small example that tries to teach you French.</p><p><p><a href="https://gist.github.com/806971">https://gist.github.com/806971</a></p></p><p>Output:</p><p>This is the first page after you run the application. It shows the question of the first node. Since its response does not contain any action, it simply creates a link to the next node.&nbsp;</p><p><div class='p_embed p_image_embed'><a href="http://getfile1.posterous.com/getfile/files.posterous.com/temp-2011-02-01/AAylHapBAcuthqhvrcJHtevDByGpaDJDHmeEFsslgoovaIbiuaixldpyuChx/first.png.scaled1000.png"><img alt="First" height="332" src="http://getfile6.posterous.com/getfile/files.posterous.com/temp-2011-02-01/AAylHapBAcuthqhvrcJHtevDByGpaDJDHmeEFsslgoovaIbiuaixldpyuChx/first.png.scaled500.png" width="500" /></a></div>&nbsp;</p><p>This page for the second node. There are two possible responses, either you say "I don't care" which takes you back to the "home" node while clicking on "you're welcome" takes you to the next node.&nbsp;</p><p>&nbsp;</p><p><div class='p_embed p_image_embed'><a href="http://getfile4.posterous.com/getfile/files.posterous.com/temp-2011-02-01/uhmGHftAIfilfmddIoqtiwuCmDsuJfxeuCBnizEkxqegaEvsnDsasxDntoIJ/second.png.scaled1000.png"><img alt="Second" height="257" src="http://getfile5.posterous.com/getfile/files.posterous.com/temp-2011-02-01/uhmGHftAIfilfmddIoqtiwuCmDsuJfxeuCBnizEkxqegaEvsnDsasxDntoIJ/second.png.scaled500.png" width="500" /></a></div></p><p>&nbsp;</p><p>Let's skip the next node as it only has one response. Now the fourth node contains two responses each of which sends you to a different node.</p><p><div class='p_embed p_image_embed'><a href="http://getfile1.posterous.com/getfile/files.posterous.com/temp-2011-02-01/bvtosHramhiyAnCqgedjvyqhllJyHacliIsCJfsxqwbfkFlmsqoaCktontkw/four.png.scaled1000.png"><img alt="Four" height="236" src="http://getfile4.posterous.com/getfile/files.posterous.com/temp-2011-02-01/bvtosHramhiyAnCqgedjvyqhllJyHacliIsCJfsxqwbfkFlmsqoaCktontkw/four.png.scaled500.png" width="500" /></a></div></p><p>If you click on "umm I don't know..." , you get to this page.</p><p><div class='p_embed p_image_embed'><a href="http://getfile5.posterous.com/getfile/files.posterous.com/temp-2011-02-01/BeDJECexctdmkbbgGIbnGddCzqwCfhADegCwFhxuGDriHFHvEBHHoCvCiAtA/fifth-one.png.scaled1000.png"><img alt="Fifth-one" height="290" src="http://getfile5.posterous.com/getfile/files.posterous.com/temp-2011-02-01/BeDJECexctdmkbbgGIbnGddCzqwCfhADegCwFhxuGDriHFHvEBHHoCvCiAtA/fifth-one.png.scaled500.png" width="500" /></a></div></p><p>&nbsp;</p><p>and if you click on "I guess it means good" link, you get to this page.&nbsp;</p><p><div class='p_embed p_image_embed'><a href="http://getfile3.posterous.com/getfile/files.posterous.com/temp-2011-02-01/ywtjgyDvAxDxazqhiDAFmIiohebnzrlziAbbfgqklcBDgnGopHuhglgjJGrI/fifth-two.png.scaled1000.png"><img alt="Fifth-two" height="295" src="http://getfile1.posterous.com/getfile/files.posterous.com/temp-2011-02-01/ywtjgyDvAxDxazqhiDAFmIiohebnzrlziAbbfgqklcBDgnGopHuhglgjJGrI/fifth-two.png.scaled500.png" width="500" /></a></div></p><p>&nbsp;</p><p>Since, none of the responses above do anything more clicking any of the two link above takes you to the page for the next node.&nbsp;</p><p>&nbsp;</p><p>Enjoy.</p><p>&nbsp;</p>]]></content:encoded>	<excerpt:encoded><![CDATA[I was inspired by the way "The Little Schemer" was used to teach scheme, with question on the left and answers on the right. I wondered how hard it would be to build a web app that could teach you in such an interactive way. Not so hard as I later...]]></excerpt:encoded>		<wp:post_date>Tue Feb 01 16:17:56 -0800 2011</wp:post_date>	<wp:post_date_gmt>Tue Feb 01 16:17:56 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>41682610</wp:post_id>	<wp:post_name>a-fully-functional-web-based-cyclic-tree-trav</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>			<wp:comment>			<wp:comment_id>6960187</wp:comment_id>							<wp:comment_author><![CDATA[Alan Post]]></wp:comment_author>				<wp:comment_author_url><![CDATA[http://lodockikumazvati.org/]]></wp:comment_author_url>						<wp:comment_date>Wed Feb 02 10:55:16 -0800 2011</wp:comment_date>			<wp:comment_date_gmt>Wed Feb 02 10:55:16 -0800 2011</wp:comment_date_gmt>			<wp:comment_content><![CDATA[Are you planning on developing this further?  I need a framework like this for a project I'm currently working on.  I'd be happy to coordinate if you're in the same situation.]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>6962478</wp:comment_id>							<wp:comment_author><![CDATA[Himanshu]]></wp:comment_author>						<wp:comment_date>Wed Feb 02 13:19:21 -0800 2011</wp:comment_date>			<wp:comment_date_gmt>Wed Feb 02 13:19:21 -0800 2011</wp:comment_date_gmt>			<wp:comment_content><![CDATA[Dude this could be an excellent project! I really like the Little Schemer teaching methodology myself!!]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>6963119</wp:comment_id>							<wp:comment_author><![CDATA[alok thapa]]></wp:comment_author>						<wp:comment_date>Wed Feb 02 13:36:38 -0800 2011</wp:comment_date>			<wp:comment_date_gmt>Wed Feb 02 13:36:38 -0800 2011</wp:comment_date_gmt>			<wp:comment_content><![CDATA[@alan Sure, I'm just doing this in my free time and maybe put up a more complete version on github soon. @himanshuc sure, let's do something!]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>6965594</wp:comment_id>							<wp:comment_author><![CDATA[Alan Post]]></wp:comment_author>				<wp:comment_author_url><![CDATA[http://lodockikumazvati.org/]]></wp:comment_author_url>						<wp:comment_date>Wed Feb 02 14:04:11 -0800 2011</wp:comment_date>			<wp:comment_date_gmt>Wed Feb 02 14:04:11 -0800 2011</wp:comment_date_gmt>			<wp:comment_content><![CDATA[@alok: github would be fantastic.  I would like to request we use the ISC license for this work, as it is compatible with other software I'm developing.I work on chicken scheme, but have a fairly good idea of how to separate implementation specific code from more general scheme code.  I think we'd be able to work from different scheme implementations.What do you think?]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>			<wp:comment>			<wp:comment_id>6987839</wp:comment_id>							<wp:comment_author><![CDATA[alok thapa]]></wp:comment_author>						<wp:comment_date>Fri Feb 04 18:00:41 -0800 2011</wp:comment_date>			<wp:comment_date_gmt>Fri Feb 04 18:00:41 -0800 2011</wp:comment_date_gmt>			<wp:comment_content><![CDATA[@alan I've just uploaded it as a github project, you can find it here -&gt; github.com/alokthapa/teach]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>	</item><item>	<title>Untitled</title>	<link>http://progprog.posterous.com/46006159</link>	<pubDate>Mon Mar 14 19:06:11 -0700 2011</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/46006159</guid>	<description></description>	<content:encoded><![CDATA[<div class='p_embed p_image_embed'><a href="http://getfile5.posterous.com/getfile/files.posterous.com/progprog/gmegGGfbqkoyphysgtIhtqaealjkzBjCqqAkDlJwijDqEgyynDtmildqDAtl/media_https1i1picplzt_zuqqk.jpg.scaled1000.jpg"><img alt="Media_https1i1picplzt_zuqqk" height="667" src="http://getfile3.posterous.com/getfile/files.posterous.com/progprog/gmegGGfbqkoyphysgtIhtqaealjkzBjCqqAkDlJwijDqEgyynDtmildqDAtl/media_https1i1picplzt_zuqqk.jpg.scaled500.jpg" width="500" /></a></div><p />Taken with <a href="http://picplz.com">picplz</a>.]]></content:encoded>	<excerpt:encoded><![CDATA[Taken with picplz.]]></excerpt:encoded>		<wp:post_date>Mon Mar 14 19:06:11 -0700 2011</wp:post_date>	<wp:post_date_gmt>Mon Mar 14 19:06:11 -0700 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>46006159</wp:post_id>	<wp:post_name>46006159</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Factorial in Lisp</title>	<link>http://progprog.posterous.com/2007/06/27/factorial-in-lisp</link>	<pubDate>Wed Jun 27 22:28:24 -0700 2007</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>				<category domain="tag" nicename="lisp"><![CDATA[lisp]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/2007/06/27/factorial-in-lisp</guid>	<description></description>	<content:encoded><![CDATA[My implementation for factorial in Lisp. This is a response to a post found  <a href="http://worsethanfailure.com/Articles/Fd-Factorial.aspx">here.</a>Also, it is tail recursive.<blockquote><div class="CodeRay">  <div class="code"><pre>(defun fact (n)       (labels ((rec (n acc)           (if (&lt; n 2)           acc           (rec (1- n ) (* acc n)))))         (rec n 1)))</pre></div></div></blockquote>ps: Factorial in Haskell seems easier though<blockquote><div class="CodeRay">  <div class="code"><pre>fact 0 = 1fact n = n * fact (n-1)</pre></div></div></blockquote>or<blockquote><div class="CodeRay">  <div class="code"><pre>fact = product . enumFromTo 1</pre></div></div></blockquote>Edit: fixed the (&lt; n 1)  bug]]></content:encoded>	<excerpt:encoded><![CDATA[My implementation for factorial in Lisp. This is a response to a post found here. Also, it is tail recursive. (defun fact (n) (labels ((rec (n acc) (if (]]></excerpt:encoded>		<wp:post_date>Wed Jun 27 22:28:24 -0700 2007</wp:post_date>	<wp:post_date_gmt>Wed Jun 27 22:28:24 -0700 2007</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>30289227</wp:post_id>	<wp:post_name>2007/06/27/factorial-in-lisp</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>			<wp:comment>			<wp:comment_id>5664014</wp:comment_id>							<wp:comment_author><![CDATA[Ralph]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Tue Feb 26 04:19:03 -0800 2008</wp:comment_date>			<wp:comment_date_gmt>Tue Feb 26 04:19:03 -0800 2008</wp:comment_date_gmt>			<wp:comment_content><![CDATA[I realize that you wrote this a while ago, but there is a bug in your Lisp version of factorial function.  If you call (factorial 0), I believe you get an infinite loop.  I think that the &quot;if&quot; condition should be (if (&amp;lt;= n 1) ...) to fix it.]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>	</item><item>	<title>C# Expressions</title>	<link>http://progprog.posterous.com/2008/08/09/one-of-the-cooler-features-of-c-30</link>	<pubDate>Sat Aug 09 18:24:23 -0700 2008</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>				<category domain="tag" nicename="c-sharp"><![CDATA[c-sharp]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/2008/08/09/one-of-the-cooler-features-of-c-30</guid>	<description></description>	<content:encoded><![CDATA[One of the cooler features of c# 3.0 are expression trees. A quick intro can be found here .Now the fact that you can compile a function at runtime means that you can build a dynamic language on top of Linq Expressions.Here's a simple dynamic "XML Language" written using Expression Trees.Basically, the idea here is to have a one-to-one mapping between your XML expression and the Linq EXpressions themselves.For example,&nbsp;<code> </code><code style="font-size: 12px;">&lt;Expression FunctionName="Constant" Type="System.String" Value="someval" /&gt;</code>would create an Linq Expression of type<blockquote>&nbsp;<code style="font-size: 12px;">Expression.Constant("someval",Type.GetType(string));</code>&nbsp;</blockquote>Here's a related test for the mapping:<blockquote>&nbsp;<code style="font-size: 12px;">[TestMethod]public void GetConstantTest(){XMLExpressionProvider expr = new XMLExpressionProvider();XElement elem = expr.BuildConstant(typeof(int).ToString(), "1");Assert.AreEqual("1", expr.GetConstant(elem));}</code>&nbsp;</blockquote>and related implementations:<blockquote>&nbsp;<code style="font-size: 12px;">public XElement BuildConstant(string type, string value){XElement elem = new XElement("Expression");elem.Add(new XAttribute("FunctionName", "Constant"));elem.Add(new XAttribute("Type", type));elem.Add(new XAttribute("Value", value));return elem;}</code><code style="font-size: 12px;"> public object GetConstant(XElement elem){return elem.Attribute("Value").Value;}</code></blockquote>Binary operations can also be mapped similarly.Here we're creating a new Add Expression with the constants 1 and 2. This actually creates a xml representation for the Add Operation.<blockquote>&nbsp;<code style="font-size: 12px;"> </code><code style="font-size: 12px;"> [TestMethod]public void BuildExpressionTest(){XMLExpressionProvider expr = new XMLExpressionProvider();XElement xelm = expr.BuildExpression("Add", new[] {expr.BuildConstant(typeof(int).ToString(),"1"),expr.BuildConstant(typeof(int).ToString(),"2")});Assert.AreEqual(xelm.ToString(SaveOptions.DisableFormatting),"&lt;Expression FunctionName=\"Add\"&gt;&lt;Expression FunctionName=\"Constant\" Type=\"System.Int32\" Value=\"1\" /&gt;&lt;Expression FunctionName=\"Constant\" Type=\"System.Int32\" Value=\"2\" /&gt;&lt;/Expression&gt;");}</code></blockquote>Basically the XML Represenation would look like<blockquote>&nbsp;<code style="font-size: 12px;"> </code><code style="font-size: 12px;"> &lt;Expression FunctionName="Add"&gt;&lt;Expression FunctionName="Constant" Type="System.Int32" Value="1" /&gt;&lt;Expression FunctionName="Constant" Type="System.Int32" Value="2" /&gt;&lt;/Expression&gt;</code></blockquote>In the test below, we're actually creating a XML Representation for a GreaterThan expression and executing it with different parameters.<blockquote>&nbsp;<code style="font-size: 12px;"> </code><code style="font-size: 12px;"> [TestMethod]public void ExpressionTest(){XMLExpressionProvider expr = new XMLExpressionProvider();ParameterExpression p = Expression.Parameter(typeof(int), "x");XElement elem = expr.BuildExpression("GreaterThan", new[] { expr.BuildConstant(typeof(int).ToString(), "5"), expr.BuildParameter(0) });Expression expression= expr.ExpressionFromXElement(elem, new [] {p});Expression&lt;Func&lt;int, bool&gt;&gt; e = Expression.Lambda&lt;Func&lt;int, bool&gt;&gt;(expression,new []{p});Console.WriteLine(e.ToString());Assert.IsTrue(e.Compile().Invoke(4));Assert.IsFalse(e.Compile().Invoke(7));}</code></blockquote>The heart of the implementation lies in the method ExpressionFromXElement which is implemented as<blockquote>&nbsp;<code style="font-size: 12px;">public Expression ExpressionFromXElement(XElement elem, ParameterExpression [] p){if (IsExpression(elem)){switch (GetFunctionName(elem)){case "Or":return Expression.Or(ExpressionFromXElement(GetArguments(elem)[0], p), ExpressionFromXElement(GetArguments(elem)[1],p));case "And":return Expression.And(ExpressionFromXElement(GetArguments(elem)[0], p), ExpressionFromXElement(GetArguments(elem)[1], p));case "LessThan":return Expression.LessThan(ExpressionFromXElement(GetArguments(elem)[0], p), ExpressionFromXElement(GetArguments(elem)[1], p));case "GreaterThan":return Expression.GreaterThan(ExpressionFromXElement(GetArguments(elem)[0], p), ExpressionFromXElement(GetArguments(elem)[1], p));case "Equal":return Expression.Equal(ExpressionFromXElement(GetArguments(elem)[0], p), ExpressionFromXElement(GetArguments(elem)[1], p));case "Condition":return Expression.Condition(ExpressionFromXElement(GetArguments(elem)[0], p), ExpressionFromXElement(GetArguments(elem)[1], p), ExpressionFromXElement(GetArguments(elem)[2], p));case "Parameter":return p[Convert.ToInt32(elem.Attribute("Index").Value)];case "Constant":return Expression.Constant(((object)GetConstant(elem)),Type.GetType(elem.Attribute("Type").Value));case "Member":return Expression.PropertyOrField(ExpressionFromXElement(GetArguments(elem)[0], p), elem.Attribute("FieldName").Value);case "IsEmptyOrNull":return Expression.Or(Expression.Equal(ExpressionFromXElement(GetArguments(elem)[0], p), Expression.Constant(String.Empty)),Expression.Equal(ExpressionFromXElement(GetArguments(elem)[0], p), Expression.Constant(null)));default: throw new Exception();}}return null;}</code>&nbsp;</blockquote>You can also do member accesses:<blockquote>&nbsp;<code style="font-size: 12px;">[TestMethod]public void MemberAccessTest(){XMLExpressionProvider expr = new XMLExpressionProvider();ParameterExpression p = Expression.Parameter(typeof(string), "str");XElement elem = expr.BuildMemberExpr("Length", new []{expr.BuildParameter(0)});Expression expression = expr.ExpressionFromXElement(elem, new[] { p });var e = Expression.Lambda&lt;Func&lt;string, int&gt;&gt;(expression, new[] { p });Console.WriteLine(e.ToString());Assert.AreEqual(6, e.Compile().Invoke("string"));Assert.AreEqual(3, e.Compile().Invoke("str"));}</code><code style="font-size: 12px;"> [TestMethod]public void BuildMemberTest(){XMLExpressionProvider expr = new XMLExpressionProvider();Assert.AreEqual("&lt;Expression FunctionName=\"Member\" FieldName=\"MaxValue\"&gt;&lt;Expression FunctionName=\"Parameter\" Index=\"0\" /&gt;&lt;/Expression&gt;", expr.BuildMemberExpr("MaxValue", new []{expr.BuildParameter(0)} ).ToString(SaveOptions.DisableFormatting));}</code></blockquote>The examples given here should give you an idea of how it works and the possiblities that exist.]]></content:encoded>	<excerpt:encoded><![CDATA[One of the cooler features of c# 3.0 are expression trees. A quick intro can be found here . Now the fact that you can compile a function at runtime means that you can build a dynamic language on top of Linq Expressions. Here's a simple dynamic "X...]]></excerpt:encoded>		<wp:post_date>Sat Aug 09 18:24:23 -0700 2008</wp:post_date>	<wp:post_date_gmt>Sat Aug 09 18:24:23 -0700 2008</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>30289237</wp:post_id>	<wp:post_name>2008/08/09/one-of-the-cooler-features-of-c-30</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>checking out post.ly</title>	<link>http://progprog.posterous.com/checking-out-postly</link>	<pubDate>Sun Oct 10 10:26:00 -0700 2010</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/checking-out-postly</guid>	<description></description>	<content:encoded><![CDATA[]]></content:encoded>	<excerpt:encoded><![CDATA[]]></excerpt:encoded>		<wp:post_date>Sun Oct 10 10:26:00 -0700 2010</wp:post_date>	<wp:post_date_gmt>Sun Oct 10 10:26:00 -0700 2010</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>30160170</wp:post_id>	<wp:post_name>checking-out-postly</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Give Scheme a chance</title>	<link>http://progprog.posterous.com/give-scheme-a-chance</link>	<pubDate>Wed May 06 03:50:00 -0700 2009</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>				<category domain="tag" nicename="scheme"><![CDATA[scheme]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/give-scheme-a-chance</guid>	<description></description>	<content:encoded><![CDATA[<div>Scheme provides a unique implementation of web server, one that gives you a powerful abstraction and lets you work on web applications as if you're working on simple functions.&nbsp;</div><div>Lets start with a simple example. Lets say you have a simple program that calculates the sum of two numbers which you receive from your user.&nbsp;</div><div>A simple Scheme program for this would be as follows:</div><p>&nbsp;(define (get-number)</p><p>&nbsp;&nbsp;(read))</p><p>&nbsp;</p><p>(define (sum-of-two)</p><p>&nbsp;(+ (get-number) (get-number)))</p><div>Even if you've never seen a Scheme program before, you should be able to easily figure out that <strong>get-number</strong> gets the user input using the built-in read method and <strong>sum-of-two</strong> just adds two user inputs. Implementations on other languages would also be pretty slmple.&nbsp;</div><div>Now, suppose you want to get the same input of two numbers through a web form. You can still keep the <strong>sum-of-two</strong> function but how would you implement <strong>get-number</strong>? Because HTTP is stateless, a typical implementation would be to first &nbsp;get the first number, store it somewhere, go back and grab another number and then calculate the sum and display the result. But Scheme lets you do this in a completely unique way, as if you're just calling a function and getting its result.</div><div>Here's one implementation for it:</div><div>#lang web-server/insta</div><div>(require web-server/servlet)</div><div>(require web-server/servlet/servlet-structs)</div><div>(require web-server/servlet/web)</div><div>(require web-server/http/bindings)</div><div>(define sb</div><div>&nbsp;&nbsp;(lambda ()</div><div>&nbsp;&nbsp; &nbsp;(send/back</div><div>&nbsp;&nbsp; &nbsp; `(html&nbsp;</div><div>&nbsp;&nbsp; &nbsp; &nbsp; (body</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;(h1 "the sum is "</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;,(number-&gt;string (+ (get-number) (get-number)))))))))</div><div>(define (<strong>get-number</strong>)&nbsp;</div><div>&nbsp;&nbsp;(string-&gt;number&nbsp;</div><div>&nbsp;&nbsp; (extract-binding/single 'number</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (request-bindings</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(send/suspend</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (lambda (k-url)</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `(html (head (title "enter a number"))</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(body</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (form ((action ,k-url))</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "enter a num"</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (input ((name "number")))</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (input ((type "submit"))))))))))))</div><p /><div>(define (start request)</div><div>&nbsp;&nbsp;(sb))</div><div><div><strong><span style="font-weight: normal;">If you have latest PLT Scheme installed, just run this in Dr. Scheme and a web page will first prompt you for the first number, and then the second and then display the result on a different page.&nbsp;</span></strong></div><div>For the moment, just concentrate on the&nbsp;<strong>get-number</strong>&nbsp;function here and ignore everything else. This function creates a web form which prompts the user for a number and returns the value. The&nbsp;<strong>very important</strong>&nbsp;thing to get here is it acts just like a regular function. This provides you with a <strong>very high level of abstraction</strong> and lets you concentrate on functions that return values instead of creating web forms and worrying about web page cycles. Also, notice you don't need to store the numbers as temporary variables anywhere.</div><div>Impressed??&nbsp;There's much more you can do with Scheme these days, so head on over the PLT Scheme documentation and check out the information on web servers. Also, check out LeftParen, a Scheme web app framework.</div><p /></div><p>&nbsp;</p><p>&nbsp;</p>]]></content:encoded>	<excerpt:encoded><![CDATA[Scheme provides a unique implementation of web server, one that gives you a powerful abstraction and lets you work on web applications as if you're working on simple functions. Lets start with a simple example. Lets say you have a simple program t...]]></excerpt:encoded>		<wp:post_date>Wed May 06 03:50:00 -0700 2009</wp:post_date>	<wp:post_date_gmt>Wed May 06 03:50:00 -0700 2009</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>753394</wp:post_id>	<wp:post_name>give-scheme-a-chance</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Untitled</title>	<link>http://progprog.posterous.com/41478363</link>	<pubDate>Sun Jan 30 16:15:17 -0800 2011</pubDate>		<dc:creator><![CDATA[alok thapa]]></dc:creator>			<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://progprog.posterous.com/41478363</guid>	<description></description>	<content:encoded><![CDATA[<div class='p_embed p_image_embed'><a href="http://getfile9.posterous.com/getfile/files.posterous.com/progprog/cCwCEvsIjCyjgguAIjbGijehtyDaymvigeAbwHDBrowDBFrleknFxFAvttns/media_https2i1picplzt_gACkz.jpg.scaled1000.jpg"><img alt="Media_https2i1picplzt_gackz" height="375" src="http://getfile4.posterous.com/getfile/files.posterous.com/progprog/cCwCEvsIjCyjgguAIjbGijehtyDaymvigeAbwHDBrowDBFrleknFxFAvttns/media_https2i1picplzt_gACkz.jpg.scaled500.jpg" width="500" /></a></div><p />Taken with <a href="http://picplz.com">picplz</a>.]]></content:encoded>	<excerpt:encoded><![CDATA[Taken with picplz.]]></excerpt:encoded>		<wp:post_date>Sun Jan 30 16:15:17 -0800 2011</wp:post_date>	<wp:post_date_gmt>Sun Jan 30 16:15:17 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>41478363</wp:post_id>	<wp:post_name>41478363</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item></channel></rss>