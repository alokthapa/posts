<item>
	<title>Factorial in Lisp</title>
	<link>http://progprog.posterous.com/2007/06/27/factorial-in-lisp</link>
	<pubDate>Wed Jun 27 22:28:24 -0700 2007</pubDate>
	
	<dc:creator><![CDATA[alok thapa]]></dc:creator>
	
	
		<category domain="tag" nicename="lisp"><![CDATA[lisp]]></category>
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://progprog.posterous.com/2007/06/27/factorial-in-lisp</guid>
	<description></description>
	<content:encoded><![CDATA[My implementation for factorial in Lisp. This is a response to a post found  <a href="http://worsethanfailure.com/Articles/Fd-Factorial.aspx">here.</a>

Also, it is tail recursive.
<blockquote>
<div class="CodeRay">
  <div class="code"><pre>(defun fact (n)
       (labels ((rec (n acc)
           (if (&lt; n 2)
           acc
           (rec (1- n ) (* acc n)))))
         (rec n 1)))</pre></div>
</div>

</blockquote>

ps: Factorial in Haskell seems easier though

<blockquote>
<div class="CodeRay">
  <div class="code"><pre>fact 0 = 1
fact n = n * fact (n-1)</pre></div>
</div>

</blockquote>
or
<blockquote>

<div class="CodeRay">
  <div class="code"><pre>fact = product . enumFromTo 1</pre></div>
</div>

</blockquote>

Edit: fixed the (&lt; n 1)  bug]]></content:encoded>
	<excerpt:encoded><![CDATA[My implementation for factorial in Lisp. This is a response to a post found here. Also, it is tail recursive. (defun fact (n) (labels ((rec (n acc) (if (]]></excerpt:encoded>	

	<wp:post_date>Wed Jun 27 22:28:24 -0700 2007</wp:post_date>
	<wp:post_date_gmt>Wed Jun 27 22:28:24 -0700 2007</wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_id>30289227</wp:post_id>
	<wp:post_name>2007/06/27/factorial-in-lisp</wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
		<wp:comment>
			<wp:comment_id>5664014</wp:comment_id>
			
				<wp:comment_author><![CDATA[Ralph]]></wp:comment_author>
				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>
			
			<wp:comment_date>Tue Feb 26 04:19:03 -0800 2008</wp:comment_date>
			<wp:comment_date_gmt>Tue Feb 26 04:19:03 -0800 2008</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I realize that you wrote this a while ago, but there is a bug in your Lisp version of factorial function.  If you call (factorial 0), I believe you get an infinite loop.  I think that the &quot;if&quot; condition should be (if (&amp;lt;= n 1) ...) to fix it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
		</wp:comment>
	
</item>
